https://leetcode.com/problems/rotate-list/description/

61. Rotate List
DescriptionHintsSubmissionsDiscussSolution
Given a list, rotate the list to the right by k places, where k is non-negative.


Example:

Given 1->2->3->4->5->NULL and k = 2,

return 4->5->1->2->3->NULL.







/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode* head1 = head;
        ListNode* node = head;
        ListNode* mid = head;
        int n = 0;
        
        if (head==NULL) {
            return head;
        }
        
        else{
        
        while (true) {
            while(n<k) {
                mid = mid->next;
                n++;
            }
            node = node->next;
            if (node->next == NULL) break;
        }
        
        head = mid->next;
        node->next = head1;
        mid->next = NULL;
        
        return head;
    }
    }
    
};