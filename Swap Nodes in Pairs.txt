24. Swap Nodes in Pairs
DescriptionHintsSubmissionsDiscussSolution
Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.

Seen this question in a real interview before?  
Difficulty:Medium
Total Accepted:207.2K
Total Submissions:530.9K
Contributor:LeetCode
Subscribe to see which companies asked this question.

Related Topics 

Similar Questions 
Reverse Nodes in k-Group



C++	
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        
        ListNode* tt = head;
        while (head != NULL) {
            ListNode* temp = head;
            head->val = head->next->val;
            head->next = temp;
            head = head->next->next;
        }
    return tt;
};
